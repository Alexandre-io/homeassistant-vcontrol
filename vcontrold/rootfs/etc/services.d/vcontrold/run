#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the vcontrold service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

# Declare variables
declare config_deviceid
declare config_commands
declare config_tty
declare config_file_vito="vito.xml"
declare config_file_vcontrold="/config/vcontrold/vcontrold.xml"
declare use_custom_config_file_vcontrold=false

# Fetch Vcontrold settings
source /etc/services.d/get_vcontrold_settings.sh

# Get configuration options from user
config_tty=$(bashio::config 'tty')
config_deviceid=$(bashio::config 'device_id')
config_commands=$(bashio::config 'commands')

# Check if custom vito.xml file exists
if [ -f "/config/vcontrold/vito.xml" ]; then
    bashio::log.info "Using custom vito.xml file."
    config_file_vito="/config/vcontrold/vito.xml"
else
    bashio::log.info "Using default vito.xml file."
fi

# Check if custom vcontrold.xml file exists
if [ -f "/config/vcontrold/vcontrold.xml" ]; then
    bashio::log.info "Using custom vcontrold.xml file."
    use_custom_config_file_vcontrold=true
else
    bashio::log.info "Using default vcontrold.xml file."
fi

# Cleanup old scripts
rm -f /etc/vcontrold/1_mqtt_commands.txt /etc/vcontrold/2_mqtt.tmpl || true
echo '#!/bin/sh' > /etc/vcontrold/2_mqtt.tmpl

# Configure scripts based on commands
commands_array=(`echo $config_commands | tr '|' ' '`)
i=0
for command in "${commands_array[@]}"
do
   :
    ((i=i+1))
    cmd=$(echo $command | cut -d':' -f1)
    type=$(echo $command | cut -d':' -f2)

    bashio::log.info "Configuring command ${i}: ${cmd} with type ${type}"
    echo $cmd >> /etc/vcontrold/1_mqtt_commands.txt

    R='$'$i''
    if [[ $type == "STRING" ]]; then
        R='"$R'$i'"'
    fi

    echo 'if [ "x$E'$i'" = "xOK" ]; then' >> /etc/vcontrold/2_mqtt.tmpl
    echo '  mosquitto_pub -h $MQTT_HOST -p $MQTT_PORT -u $MQTT_USER -P $MQTT_PASSWORD -t $MQTT_TOPIC/$C'$i' -m '$R'' >> /etc/vcontrold/2_mqtt.tmpl
    echo 'fi' >> /etc/vcontrold/2_mqtt.tmpl
done

# Configure vcontrold.xml with the user-specified values
sed -i "s/#DEVICEID#/$config_deviceid/g" /etc/vcontrold/vcontrold.xml
sed -i "s|#VITOXML#|$config_file_vito|g" /etc/vcontrold/vcontrold.xml

# Enable or disable debug mode based on user configuration
if bashio::config.true 'debug'; then
    sed -i "s/#DEBUG#/y/g" /etc/vcontrold/vcontrold.xml
else
    sed -i "s/#DEBUG#/n/g" /etc/vcontrold/vcontrold.xml
fi

# Start the vcontrold service or a dummy process for external control
if [ "$VCONTROL_HOST" = "localhost" ]; then
    bashio::log.info "Starting local vcontrold..."

    # Check if a custom config file2 is used and include -x option only if needed
    if [ "$use_custom_config_file_vcontrold" = true ]; then
        bashio::log.info "Using custom vcontrold.xml."
        exec /usr/sbin/vcontrold -x "$config_file_vcontrold" -n -U root -d "$config_tty"
    else
        bashio::log.info "Using default vcontrold.xml."
        exec /usr/sbin/vcontrold -n -U root -d "$config_tty"
    fi
else
    bashio::log.info "vcontrold is not running locally. Keeping process alive."
    tail -f /dev/null
fi
